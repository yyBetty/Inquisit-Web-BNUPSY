// stroop实验程序 
<item ci>
	/1 = "红"
	/2 = "蓝"
</item>


<text bluetxt>
	/items = ci
	/ fontstyle = ("Arial",40ptc)
	/txbgcolor = (0,0,0)
	/txcolor = (0,0,255)
</text>

<text redtxt>
	/items = ci
	/ fontstyle = ("Arial",40ptc)
	/txbgcolor = (0,0,0)
	/txcolor = (255,0,0)
</text>

//在这里加入需要反馈给被试的信息，例如是否正确作答，正确的就打一个对号，做错的就打一个错号。

<text correctmsg>
	/items = ("√")
	/fontstyle = ("Arial", 10%)
	/txbgcolor = (transparent)
	/txcolor = (0,255,0)
</text>

<text errormsg>
	/items = ("×")
	/fontstyle = ("Arial", 10%)
	/txbgcolor = (transparent)
	/txcolor = (255,0,0)
</text>

//这里增加一个注视点

<text fixation>
	/items = ("+")
	/fontstyle = ("Arial", 40ptc)
	/txbgcolor = (transparent)
	/txcolor = (255,255,255)
</text>

//在这里增加指导语内容，告知被试任务要求。

<text instructiontxt>
	/hjustify = center
	/items = ("这是一个认知实验，在屏幕的中央会随机出现汉字“红”和“蓝”，请忽略文字的含义，判断汉字的颜色；如果单词的颜色是蓝色请按“F”键，如果单词的颜色是红色请按“J”键。")
	/size = (1000,300)
	/fontstyle = ("宋体", 24pt)
	/txbgcolor = (transparent)
	/txcolor = (255,255,255)
</text>

// 这里增加一个按钮选项，就是看完指导语之后按任意键继续任务。

<text anykeytxt>
	/items = ("按任意键开始实验")
	/vposition = 70 pct
	/fontstyle = ("宋体", 24pt)
	/txcolor = (255,255,255)
	/txbgcolor = (transparent)
</text>

**************************************************************************************************************************************************************************
// 现在，我们已经定义好了需要呈现的内容，我们接下来要把需要呈现的内容添加到每个trial里

<trial instruction>
	/validresponse = (anyresponse)
	/stimulusframes = [1=instructiontxt,anykeytxt]
	/recorddata = false
</trial>

<trial bluetrail>
	/correctmessage = (correctmsg,500)
	/ errormessage = (errormsg,500)
	/pretrialpause = 1000
	/validresponse = ("F","J")
	/correctresponse = ("F")
	/stimulustimes = [1= fixation; 500 = bluetxt] 
</trial>
//stimulustimes是按时间走的，stimulusframes的是按帧走的，但是一帧是1/60秒，所以其实是精确不到1ms的……//
<trial redtrial>
	/correctmessage = (correctmsg,500)
	/ errormessage = (errormsg,500)
	/pretrialpause = 1000
	/validresponse = ("F","J")
	/correctresponse = ("J")
	/stimulustimes = [1= fixation; 500 = redtxt]
</trial>

**************************************************************************************************************************************************************************

//增加instruction block来呈现指导语
<block instructionblk>
	/screencolor = (0,0,0)
	/trials = [1 = instruction]
</block>

// 现在每个试次都编辑好了，我们可以把试次组织到区组模块当中，方便实验调用,并返回相应的结果值,最终，我们将block 整合到expt模块中，加在到整个实验当中。
<block stroopblk>
	/screencolor = (0,0,0)
	/blockfeedback = (meanlatency,correct)
	/trials = [1-8 = noreplace(bluetrail, redtrial)]
</block>

<expt>
	/ blocks = [1 = instructionblk; 2 = stroopblk]
</expt>

**************************************************************************************************************************************************************************
// 至此，我们的第一个实验就完成了，在这个实验中，首先可以自上而下的构思:
// 1. 我们要完成一个实验，实验包含一个区组;
// 2. 区组中设定背景颜色，完成区组后呈现的反馈结果，区组中包含的试次数量和类型。这个区组需要呈现中包含16个试次，分为两种类型，分别是奇数试次和偶数试次，通过随机的方式反复调用8次，顺序随机；
// 3. 我们需要定义两种试次，分别是奇数和偶数试次。在每个试次中设定呈现的事件序列，有效的键盘反应，正确的反应键，试次呈现的内容。其中内容是调用编辑好的刺激。
// 4. 在刺激中，我们定义为文字类型的刺激，定义刺激呈现的字体，大小，颜色，背景颜色等信息，最重要的是，呈现的内容来源是调用编辑好的条目，也就是最基本的需要呈现的内容。
// 5. 我们需要提前编辑好我们要呈现的内容，也就是奇数和偶数，我们需要用item进行定义，定义为1个列表。

// 在实验的具体编制过程中，我们一般采用自下而上的思路进行编程，也就是先把需要呈现的内容条目编辑好，然后下一步编辑刺激，之后编辑试次，区组，最终组织到实验当中。

// 通过这样的步骤，我们就完成了我们第一个实验的编制。